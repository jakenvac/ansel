name: Nightly Mac PKG

on:
  # schedule:
  #   - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  Win64:
    if: github.repository == 'aurelienpierreeng/ansel' || github.event_name == 'workflow_dispatch'
    name: Nightly Ansel Mac OS build
    runs-on: macos-14
    strategy:
      fail-fast: false
      matrix:
        build:
          - { os: macos-14,    xcode: 15.4,   deployment: 14.0 }
        btype:
          - Release
        compiler:
          - { compiler: XCode,   CC: cc, CXX: c++ }
        eco: [-DBINARY_PACKAGE_BUILD=ON]
        target:
          - skiptest
        generator:
          - Ninja
        branch:
          - { code: "${{ github.ref_name }}", label: stable }
    env:
      DEVELOPER_DIR: /Applications/Xcode_${{ matrix.build.xcode }}.app/Contents/Developer
      CC: ${{ matrix.compiler.CC }}
      CXX: ${{ matrix.compiler.CXX }}
      MACOSX_DEPLOYMENT_TARGET: ${{ matrix.build.deployment }}
      SRC_DIR: ${{ github.workspace }}/src
      BUILD_DIR: ${{ github.workspace }}/src/build
      INSTALL_PREFIX: ${{ github.workspace }}/src/install
      CMAKE_BUILD_TYPE: ${{ matrix.btype }}
      GENERATOR: ${{ matrix.generator }}
      TARGET: ${{ matrix.target }}
      BRANCH: ${{ matrix.branch.code }}
      BUILD_NAME: ${{ matrix.branch.label }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH }}
          fetch-depth: 2000
          submodules: true
          fetch-tags: true
          path: ${{ env.SRC_DIR }}
      - name: Install Base Dependencies
        run: |
          brew update > /dev/null || true
          brew tap Homebrew/bundle
          cd src/.ci
          brew bundle --verbose
          brew link --force libomp 
          brew link --force libsoup@2
      - name: Update lensfun data
        if: ${{ success() }}
        run: |
          lensfun-update-data
      - name: Build and Install
        run: |
          cmake -E make_directory "${BUILD_DIR}";
          cmake -E make_directory "${INSTALL_PREFIX}";
          cd ${SRC_DIR}
          .ci/ci-script-mac.sh;
          # ./build.sh --prefix ${INSTALL_PREFIX} --disable-icu 
          # cmake --build "${BUILD_DIR}" --target install
      - name: Check if it runs
        run: |
          ${INSTALL_PREFIX}/bin/ansel --version || true
          ${INSTALL_PREFIX}/bin/ansel-cli \
                 --width 2048 --height 2048 \
                 --hq true --apply-custom-presets false \
                 "${SRC_DIR}/src/tests/integration/images/mire1.cr2" \
                 "${SRC_DIR}/src/tests/integration/0000-nop/nop.xmp" \
                 output.png \
                 --core --disable-opencl --conf host_memory_limit=8192 \
                 --conf worker_threads=4 -t 4 \
                 --conf plugins/lighttable/export/force_lcms2=FALSE \
                 --conf plugins/lighttable/export/iccintent=0 || true # OpenMP builds crash for most configs
      - name: Build macOS package
        run: |
          ./src/packaging/macosx/3_make_hb_ansel_package.sh
      - name: Create DMG file
        run: |
          ./src/packaging/macosx/4_make_hb_ansel_dmg.sh
      - name: Package upload
        if: ${{ success() }}
        uses: actions/upload-artifact@v3
        with:
          name: ansel.${{ env.BUILD_NAME }}.mac
          path: ${{ env.INSTALL_PREFIX }}/Ansel-*.dmg
          retention-days: 90

  upload_to_release:
    runs-on: ubuntu-latest
    needs: Win64
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ansel.stable.mac
      - name: Update nightly release
        uses: eine/tip@master
        with:
          tag: v0.0.0
          rm: false
          token: ${{ secrets.GITHUB_TOKEN }}
          files: Ansel-*.dmg
